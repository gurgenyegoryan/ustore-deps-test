name: Release

on:
  push:
    branches: ["main-dev"]

env:
  BUILD_TYPE: Release
  GH_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
  

permissions:
  contents: write
  pages: write
  id-token: write


jobs:
  build_arm:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false
        ref: 'main-dev'

    - name: Install dependecies
      run: gcc --version
        sudo apt-get update 
        sudo apt-get install -y python3 python3-dev python3-pip cmake git build-essential libpthread-stubs0-dev
        git clone https://github.com/theradcolor/arm-linux-gnueabi --depth=1

    - name: Build conan package on ARM
      run: |
          git clone https://github.com/unum-cloud/ustore.git
          cd ustore/ && git checkout main-dev && git submodule update --init --recursive
          python -m pip install --force-reinstall conan==1.60.1
          sed -i 's/^\(.*\)cmake = CMake(self)/# \1cmake = CMake(self)/; s/^\(.*\)cmake.configure()/# \1cmake.configure()/; s/^\(.*\)cmake.build()/# \1cmake.build()\n       pass/' ./conanfile.py
          conan profile new --detect default
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan profile update settings.compiler.version=11 default
          conan profile update settings.arch_build=armv8 default
          conan profile update settings.arch=armv8 default
          export ARM_NONE_EABI_GCC_PATH=/home/runner/ustore-deps-test/ustore-deps-test/arm-linux-gnueabi/bin
          echo "CONAN_CMAKE_FIND_ROOT_PATH=$ARM_NONE_EABI_GCC_PATH" >> ~/.conan/profiles/default
          echo "CC=$ARM_NONE_EABI_GCC_PATH/arm-linux-gnueabi-gcc" >> ~/.conan/profiles/default
          echo "CXX=$ARM_NONE_EABI_GCC_PATH/arm-linux-gnueabi-g++" >> ~/.conan/profiles/default
          # echo "CMAKE_HAVE_LIBC_PTHREAD=True" >> ~/.conan/profiles/default
          conan create . unum/arm_linux --build=missing -pr:b=default
          cd ~/.conan && tar -czvf ustore_deps_arm_linux.tar.gz data/ && \
          mkdir archive/ && mv ustore_deps_arm_linux.tar.gz archive/
